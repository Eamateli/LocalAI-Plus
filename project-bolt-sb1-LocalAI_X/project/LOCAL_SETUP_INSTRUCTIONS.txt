LocalAI+ Project - Local Setup Instructions
==========================================

1. Prerequisites
----------------
- Docker & Docker Compose (recommended for easiest setup)
- Ollama running with a model (e.g., `ollama pull mistral:latest`)
- Python 3.10+ (for backend, if running without Docker)
- Node.js & npm (for frontend, if running without Docker)

2. Easiest Way: Using Docker Compose
------------------------------------
From the `project-bolt-sb1-LocalAI_X/project` directory, run:

    docker-compose up -d

- This will start both the backend (API) and frontend (React app).
- Access the web interface at: http://localhost:3000
- API docs: http://localhost:8000/docs

3. Manual Way: Run Backend and Frontend Separately
--------------------------------------------------
A. Backend
---------
1. Activate the virtual environment:

    cd project-bolt-sb1-LocalAI_X/project/backend
    source venv/bin/activate  # or .\venv\Scripts\activate on Windows

2. Install dependencies (if not already):

    pip install -r requirements.txt

3. Start the backend:

    python main.py

   or (for auto-reload during development):

    uvicorn main:app --reload --host 0.0.0.0 --port 8000

B. Frontend
-----------
1. Install dependencies:

    cd project-bolt-sb1-LocalAI_X/project
    npm install

2. Start the frontend:

    npm run dev

   - The app will be available at http://localhost:3000

4. Make Sure Ollama is Running
-----------------------------
Start Ollama and pull a model:

    ollama serve
    ollama pull mistral:latest

5. Configuration
----------------
- Set environment variables as needed (see `.env.example` or README for options).
- Make sure the backend can connect to Ollama and any other services (Qdrant, etc.).

6. Troubleshooting a Blank Page
------------------------------
- Check browser console for errors.
- Check terminal output for both frontend and backend for errors.
- Ensure backend is running and accessible at the expected URL.
- Check API URLs in the frontend code/config.

---

If you run into any errors, copy the error message here and I'll help you debug! 